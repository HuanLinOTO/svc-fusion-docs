import{_ as a,c as e,o as t,K as o}from"./chunks/framework.v3b_Jckq.js";const x=JSON.parse('{"title":"关于 Linux","description":"","frontmatter":{},"headers":[],"relativePath":"start/linux.md","filePath":"start/linux.md"}'),n={name:"start/linux.md"},i=o('<h1 id="关于-linux" tabindex="-1">关于 Linux <a class="header-anchor" href="#关于-linux" aria-label="Permalink to &quot;关于 Linux&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>因为人忙，Linux 包维护再次进入停滞状态，如有需要请自行打包。</p></div><p>周所周知的原因，Windows 比 Linux 的用户多上不少，而且开发者的主力系统也是 Windows，所以本整合包优先开发 Windows 版本，Linux 版本的开发会相对滞后一些。</p><p>且因为无法找到合适的测试平台，Linux 版本的稳定性也无法保证，如有 Bug 还请见谅。</p><p>完整包内的环境是 Windows 的，Linux 版本的用户需要自行安装依赖。</p><p>另外，记得安装 FFmpeg</p><h2 id="启动方式" tabindex="-1">启动方式 <a class="header-anchor" href="#启动方式" aria-label="Permalink to &quot;启动方式&quot;">​</a></h2><p>在安装依赖后，使用 <code>python launcher.py</code> 启动整合包。</p><p><strong>实在不行可以从各大平台打包拉取已经做好的镜像</strong></p><h2 id="已知可能的问题" tabindex="-1">已知可能的问题 <a class="header-anchor" href="#已知可能的问题" aria-label="Permalink to &quot;已知可能的问题&quot;">​</a></h2><h3 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">​</a></h3><p>仅支持 AMD64 架构，不支持 ARM 架构。</p><h3 id="python-启动路径" tabindex="-1">Python 启动路径 <a class="header-anchor" href="#python-启动路径" aria-label="Permalink to &quot;Python 启动路径&quot;">​</a></h3><p>整合包在非 Win32 下使用命令 <code>python</code> 作为拉起进程的方式，而不是 <code>sys.executable</code>，这可能会导致一些问题。</p><h3 id="「打开数据集目录」" tabindex="-1">「打开数据集目录」 <a class="header-anchor" href="#「打开数据集目录」" aria-label="Permalink to &quot;「打开数据集目录」&quot;">​</a></h3><p>本功能使用 Win32 下的 <code>explorer</code> 命令实现，Linux 下可能无法使用。</p>',16),r=[i];function s(c,l,d,h,p,u){return t(),e("div",null,r)}const m=a(n,[["render",s]]);export{x as __pageData,m as default};
